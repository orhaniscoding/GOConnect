name: release-auto

on:
  push:
    branches: [ "main", "master" ]
  workflow_dispatch:

jobs:
  bump-and-tag:
    runs-on: windows-latest
    permissions:
      contents: write
    concurrency:
      group: release-auto
      cancel-in-progress: true
    steps:
      - name: Checkout (full history for tags)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set git user
        shell: pwsh
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Compute next version (Conventional Commits)
        id: semver
        shell: pwsh
        run: |
          git fetch --tags
          $lastTag = (git describe --tags --abbrev=0) 2>$null
          if (-not $lastTag) { $lastTag = "v0.1.0" }  # baseline for first auto release
          $logs = git log "$lastTag"..HEAD --pretty="%s%n%b"

          $bump = "patch"
          if ($logs -match "(?im)^\s*feat!:|BREAKING CHANGE:") { $bump = "major" }
          elseif ($logs -match "(?im)^\s*feat:")              { $bump = "minor" }

          function Inc-Version($v,$part) {
            if ($v.StartsWith("v")) { $v = $v.Substring(1) }
            $maj,$min,$pat = $v.Split(".")
            switch ($part) {
              "major" { $maj=[int]$maj+1; $min=0; $pat=0 }
              "minor" { $min=[int]$min+1; $pat=0 }
              default { $pat=[int]$pat+1 }
            }
            return "v$maj.$min.$pat"
          }

          $newTag = Inc-Version $lastTag $bump
          "tag=$newTag" | Out-File -FilePath $env:GITHUB_OUTPUT -Append -Encoding utf8
          Write-Host "Next tag: $newTag"

      - name: Skip if tag already exists
        id: checktag
        shell: pwsh
        run: |
          $tag = "${{ steps.semver.outputs.tag }}"
          git fetch --tags
          $exists = (git tag --list $tag)
          if ($exists) {
            Write-Host "Tag $tag already exists. Skipping."
            "skip=true" | Out-File -FilePath $env:GITHUB_OUTPUT -Append -Encoding utf8
          } else {
            "skip=false" | Out-File -FilePath $env:GITHUB_OUTPUT -Append -Encoding utf8
          }

      - name: Create and push tag
        if: steps.checktag.outputs.skip == 'false'
        shell: pwsh
        run: |
          $tag = "${{ steps.semver.outputs.tag }}"
          git tag -a $tag -m "Release $tag"
          git push origin $tag
